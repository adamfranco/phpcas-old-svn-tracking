<project name="phpcas-devel" default="pear" basedir=".">

  <property file="version.properties"/>
  <property file="build.properties"/>

  <taskdef name="doxygen" 
           classname="org.doxygen.tools.DoxygenTask"
           classpath="utils/ant_doxygen.jar"/>

  <!-- compute current date -->
  <tstamp>
    <format property="date" pattern="d-MMMM-yyyy HH:mma" locale="en"/>
  </tstamp>

  <!-- ==========================================================
       Create pear installable package
  -->  
  <target name="pear" description="Create pear installable package">
    <mkdir dir="dist"/>
    <delete dir="tmp" />
    <mkdir dir="tmp/cas-${phpcas.version}"/>
    <!-- copy source files to tmp directory -->
    <copy todir="tmp/cas-${phpcas.version}">
      <fileset dir="source" includes="**/*.php" />
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
  	<mkdir dir="tmp/cas-${phpcas.version}/docs"/>
    <!-- copy docs files to tmp directory -->
    <copy todir="tmp/cas-${phpcas.version}/docs">
      <fileset dir="docs" excludes="images/*" />
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
  	<!-- copy images to tmp directory -->
    <copy todir="tmp/cas-${phpcas.version}/docs">
      <fileset dir="docs" includes="images/*" />
    </copy>
    <!-- check for the doxygen program, and fail is not found -->
    <echo message="checking for doxygen..."/>
    <fail message="please set ${doxygen.path} in build.properties" unless="doxygen.path"/>
    <available file="${doxygen.path}" type="file" property="doxygen.present"/>
    <fail message="doxygen program not found (${doxygen.path})" unless="doxygen.present"/>
    <!-- write Doxygen configuration file from template -->
    <echo message="write Doxygen configuration file..."/>
    <copy file="utils/Doxyfile" 
          tofile="tmp/Doxyfile">
      <filterchain>
        <expandproperties/>
        <tokenfilter>
          <replaceregex pattern="\\" replace="/" flags="g"/> 
        </tokenfilter>
      </filterchain>
    </copy>
    <!-- call Doxygen -->
    <echo message="writing API documentation..."/>
    <doxygen doxygenPath="${doxygen.path}" configFilename="${basedir}/tmp/Doxyfile"/>
    <!-- write makepackage.php file from template -->
    <echo message="write makepackage.php file..."/>
    <copy file="utils/makepackage.php" 
          tofile="tmp/makepackage.php">
      <filterchain>
        <expandproperties/>
      </filterchain>
    </copy>
    <!-- generate package.xml -->
    <echo message="checking for php..."/>
    <fail message="please set ${php.path} in build.properties" unless="php.path"/>
    <available file="${php.path}" type="file" property="php.present"/>
    <fail message="php program not found (${php.path})" unless="php.present"/>
    <echo message="building the PEAR package.xml file..."/>
    <exec dir="${basedir}" executable="${php.path}" >
      <arg line="-f tmp/makepackage.php"/>
    </exec>
    
    <copy file="tmp/package.xml" 
          tofile="tmp/cas-${phpcas.version}/package.xml">
    </copy>
    
    <!-- generate PEAR package .tgz -->
    <echo message="building the PEAR package..."/>
        <exec dir="${basedir}/tmp/cas-${phpcas.version}" executable="${pear.path}" >
          <arg line="package package.xml"/>
    </exec>
    
    <copy file="tmp/cas-${phpcas.version}/CAS-${phpcas.version}.tgz" 
          tofile="dist/CAS-${phpcas.version}.tgz">
    </copy>

    <delete dir="tmp" />
  </target>

  <!-- ========================================================== 
       Upload the distribution files to sourceforge.net
  -->  
  <target name="upload" 
          depends="pear" 
          description="Upload the distribution files to sourceforge.net">
    <!-- Check that all the properties used for archives upload are set -->
    <fail message="please set ${sourceforge.arch.host} in build.properties" unless="sourceforge.arch.host"/>
    <fail message="please set ${sourceforge.arch.username} in build.properties" unless="sourceforge.arch.username"/>
    <fail message="please set ${sourceforge.arch.password} in build.properties" unless="sourceforge.arch.password"/>
    <fail message="please set ${sourceforge.arch.remotedir} in build.properties" unless="sourceforge.arch.remotedir"/>
	<!-- upload distribution files -->
    <ftp server="${sourceforge.arch.host}" userid="${sourceforge.arch.username}" password="${sourceforge.arch.password}"
         remotedir="${sourceforge.arch.remotedir}" action="put" binary="yes" depends="yes" verbose="yes">
      <fileset dir="dist" 
               includes="
                         phpcas-${phpcas.version}.zip
                        "/>
    </ftp>
  </target>

  <!-- ==========================================================
       Clean up everything but distribution file
  -->  
  <target name="clean" description="Clean up everything but distribution files">
    <delete dir="tmp"/>
  </target>
  
  <target name="cleanall" description="Clean up everything including distribution files" depends="clean">
    <delete dir="dist"/>
  </target>
  
</project>

